
业务难点：我们app首页从上而下业务有搜索，消息，天气，分组，设备列表，广告，全局弹窗等业务，然而每个模块对应着不同的开发人员，并且有些业务还有热更新的需求。所以首页需要一种实现一种类似平台的效果。
首先业务上：即时性，变动多的需求模块采用ReactNative的方式去实现，例如天气，广告，全局弹窗等。
第二点：其他业务以View的形式提供首页调用，各个业务负责各自视图加载逻辑，并且提供对应的接口给首页调用，例如 请求，加载，刷新数据等接口。
第三点：我们App有许多设备，存在很多的公共的和差异的设备特性。例如在设备列表上面有离线状态，电池状态等，大部分设备其判断逻辑是相同的，当然也还存在有些特殊的设备其判断逻辑会比较特殊，所以这块对设备卡片上View属性放在了一起。并采用适配器的模式给外部修改提供了接口。（如果调用该接口，那么该属性的判断则走新的判断逻辑）

UI技术难点：实现了一个类似桌面图标合并的效果，其难点
（1）在于每一次拖进拖出，列表刷新的判断逻辑，尽量去使用delete 和 insert 方法 而不是全部刷新，因为我们设备卡片使用的是RN view 每一次刷需要重新加载RN，代价比较大。
（2）另外一个难点是合并判断的时机，需要区别是合并还是正常拖动排序， //利用CGRectIntersection 两个Cell有交集，交集面积大于10%

RN技术难点：手势冲突，主要解决iOS在滑动的时候会触发RN的点击事件。 解决方法是重写ReactNative点击手势，加长点击的时间，已经点击触发两个的点的距离判断逻辑。


通过swipe组件，使用5个循环的View实现cell复用的效果，其难点在于数据的修改，以及边界数据的修改。 如何去判断临界






